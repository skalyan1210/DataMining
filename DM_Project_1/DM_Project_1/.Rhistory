install.packages("rmarkdown", dependencies=TRUE)
install.packages("httpuv", type="binary")
install.packages("xtable", type="binary")
install.packages("sourcetools", type="binary")
install.packages("later", type="binary")
install.packages("promises", type="binary")
install.packages("promises")
version
#importing the dataset
dataset <- read.table(file.choose(),header=FALSE, sep="\t")
dataset
#taking all the variables except disease
dataset1<- dataset[,1:ncol(dataset)-1]
dataset1
#function for calculating the mean-subtrachtion matrix (x'=x-mean)
normalize <- function(dataset)
{ means<- colMeans(dataset)
for(i in 1:ncol(dataset))
{ m <- dataset[,i]- means[i]
dataset[,i] <- m}
return(dataset)
}
#function for calculating the new variables (y1=a11x1+a12x2+……+a1nxn)
final_data <- function(dataset,n,eigen_vectors)
{   f <- dataset
for (i in 1:n) {
f[,i] <- data.frame(rowSums(t(t(dataset)*eigen_vectors[i,])))
}
f[,c(n+1:ncol(dataset))]<-NULL #nullifying the remaining variables except first two
return(f)
}
#calculating the covariance matrix
covariance_matrix <- cov(normalize(dataset1))
covariance_matrix
#eigen vectors and the eigen values
ev <- eigen(covariance_matrix)
eigen_values <- ev$values
eigen_vectors<- ev$vectors
eigen_values
eigen_vectors
final_dataset <- final_data(dataset1,2,eigen_vectors) #calling the function that we defined
final_dataset[,ncol(final_dataset)+1] <- dataset[,ncol(dataset)] #adding the last column (diseases) to the final dataset again
final_dataset
#testing example
x1<- read.csv(file.choose())
x1
x2<-x1
#testing example
x1<- read.csv(file.choose())
x1
x2<-x1
#importing the dataset
dataset <- read.table(file.choose(),header=FALSE, sep="\t")
dataset
#taking all the variables except disease
dataset1<- dataset[,1:ncol(dataset)-1]
dataset1
#function for calculating the mean-subtrachtion matrix (x'=x-mean)
normalize <- function(dataset)
{ means<- colMeans(dataset)
for(i in 1:ncol(dataset))
{ m <- dataset[,i]- means[i]
dataset[,i] <- m}
return(dataset)
}
#function for calculating the new variables (y1=a11x1+a12x2+……+a1nxn)
final_data <- function(dataset,n,eigen_vectors)
{   f <- dataset
for (i in 1:n) {
f[,i] <- data.frame(rowSums(t(t(dataset)*eigen_vectors[i,])))
}
f[,c(n+1:ncol(dataset))]<-NULL #nullifying the remaining variables except first two
return(f)
}
#calculating the covariance matrix
covariance_matrix <- cov(normalize(dataset1))
covariance_matrix
#eigen vectors and the eigen values
ev <- eigen(covariance_matrix)
eigen_values <- ev$values
eigen_vectors<- ev$vectors
eigen_values
eigen_vectors
final_dataset <- final_data(dataset1,2,eigen_vectors) #calling the function that we defined
final_dataset[,ncol(final_dataset)+1] <- dataset[,ncol(dataset)] #adding the last column (diseases) to the final dataset again
final_dataset
#plotting PCA
library("ggplot2")
ggplot(final_dataset, aes(V1,V2, colour= V3))+geom_point()+xlab("FEATURE-1")+ylab("FEATURE-2")+ggtitle("PCA")+labs(colour = "Diseases")
